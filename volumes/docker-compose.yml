services:
  redis:
    container_name: redis_container
    image: redis:alpine
    restart: always
    ports:
      - 6379:6379
    command: redis-server --loglevel warning
    volumes:
      - ./docker-volumes/cache:/data

  mongodb:
    container_name: mongodb_container
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./docker-volumes/data:/data/db

  mysql:
    image: mysql:latest
    container_name: mysql_container
    restart: always
    environment:
      MYSQL_USER: jobber
      MYSQL_DATABASE: jobber_auth
      MYSQL_ROOT_PASSWORD: jobber
      MYSQL_PASSWORD: jobber
    ports:
      - 3306:3306
    volumes:
      - ./docker-volumes/mysql:/var/lib/mysql

  postgres:
    container_name: postgres_container
    image: postgres:latest
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./docker-volumes/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: jobber
      POSTGRES_PASSWORD: jobber
      POSTGRES_DB: jobber_reviews

  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3-management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: jobber
      RABBITMQ_DEFAULT_PASS: jobber
    ports:
      # AMQP protocol port
      - "5672:5672"
      # Management UI port
      - "15672:15672"

  elasticsearch:
    networks:
      - elastic
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.0
    restart: always
    ports:
      - 9200:9200
    volumes:
      - ./docker-volumes/elasticsearch:/usr/share/elasticsearch/data
    environment:
      ES_JAVA_OPTS: "-Xmx1g -Xms1g"
      bootstrap.memory_lock: "true"
      discovery.type: "single-node"
      xpack.security.enabled: "false"
      xpack.security.authc.api_key.enabled: "true"
      xpack.monitoring.collection.enabled: "true"
      xpack.security.enrollment.enabled: "true"

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:9.0.0
    restart: always
    ports:
      - 5601:5601
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    depends_on:
      - elasticsearch
    networks:
      - elastic
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch:9200"]

networks:
  elastic:
    name: elastic # This allows other services (like Kibana) to talk to Elasticsearch using the network name (elasticsearch).

